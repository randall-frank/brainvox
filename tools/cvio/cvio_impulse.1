.TH cvio_impulse 1
.SH NAME
cvio_impulse - compute the convolution of two CVIO files
.SH SYNOPSIS
cvio_impulse [options] irf imp tim out
.SH DESCRIPTION
This program computes the convolution of the function
specified by the CVIO file IRF and the CVIO file IMP.
The CVIO file OUT is generated by sampling the convolution
data at the timestamps specified by the CVIO file TIM.
Note: it is completely reasonable for IMP and TIM to be
the same file.
.PP
The program works in the following manner.  The IRF file
is read into memory and shifted so the first timestamp is
zero.  The IMP and TIM files are opened.  Samples from
the IMP file are used to create an active list of "start
times".  These start times are created whenever a sample
arrives on IMP or when a non-zero sample arrives if the
(-w) option is specified).  The resuting function is
a summation of the IRF curve sampled (linearly) at the
time points specified by the current timestamp from TIM
and the offsets computed from the start times.  Thus,
one sample from the IRF is computed for each active
start time for every timestamp generated by TIM.  These
are summed and output to OUT at the TIM timestamp.  Once
a start time is further back in time than the length of
the IRF, the start time is removed from the active list.
This approach allows for real-time, progressive computation
of the convolution (see -l option).
.PP
Note: the active start time list has a fixed length and
can be overflowed by high sampling rates and/or long
IRF signals.
.PP
By default, IMP sample values are ignored.  Only their
timestamps are considered.  For a "continuous" convolution,
the (-w) option can be used to select for weighting of
individual samples.  To avoid overflowing the internal
buffers, the -C and -W options can be used to filter
out unnecessary IMP sample values.
.PP
Options:
.TP
-v
Selects verbose mode
.TP
-c
Specifies that the output file should be in compressed format.
.TP
-l
If this option is specified, the program will continue to run
while there are still active writers on the TIM file, waiting for
more samples to arrive.  By default, the program will only compute
for the samples in the TIM file when it is opened.
.TP
-w
Use the actual values in the IMP file to weight the impulses.
By default, all samples in the IMP file are considered to have
a weight of 1.0 (IMP sample values are ignored).
.TP
-W(width)
.TP
-C(center)
If the -w option is set, the -W and -C values allow the user to
specify a range of IMP sample values that should be considered
to have the value of zero.  Thus, they allow for a simple range
rejection filter to be specified.  Default width=0, center=0.
.TP
-m(buffersize)
Set the maximum number of active impulses.  The default is 1000.
.SH SEE ALSO
cvio_intro(1)
.SH NOTES
This program was intended to be used in the situation where IMP
is a set of impulses, not a continuous function.  As such, internal
buffers are allocated with this in mind.  The program can be used
for general convolution (it models IMP as a series of impulses),
but performance may not be adequate for real-time applications.
.PP
It might be useful for this program to implement an integration
scheme other than point sampling, if the continuous case becomes
common.
.SH ORIGIN
Brainvox, Human Neuroanatomy and Neuroimaging Lab, Department of Neurology,
University of Iowa
