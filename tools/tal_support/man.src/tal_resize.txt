tal_resize(Brainvox)                         tal_resize(Brainvox)



NNAAMMEE
       tal_resize − Performs volume resampling/rescaling.

SSYYNNOOPPSSIISS
       tal_resize [options] inputtemp outputtemp

DDEESSCCRRIIPPTTIIOONN
       This  program reads the input volume into memory.  It then
       takes a user specified rectangular portion of  the  volume
       and  saves  it to disk as the output volume after optional
       independant axis scaling.

       Another way to think of the operation is that  a  selected
       3D  rectangle  from  the input volume is written out after
       being resampled to a user specified 3D resolution  (possi­
       bly independant of the input volume).

       INPUTTEMP is the input volume template.  OUTPUTTEMP is the
       volume template for the output resampled volume.   The  ‐c
       and  ‐r options are used to define a rectangular region of
       interest in the input volume.  They select the corner  and
       size of the region in pixels/slices.  The ‐o option speci­
       fies the 3D rectangle for the output volume.  Each axis is
       scaled  independantly  so  that  the  selected region com­
       pletely fills the output volume.  Finally, the output vol­
       ume  can  be expanded (padded) with a rim of output voxels
       whose thickness can be selected independantly for the lim­
       its of each axis.  Optional filtering is available.

       Options:

       ‐x(dx) The  x  axis  size  of  the  image  in pixels.  The
              default is 256 pixels.

       ‐y(dy) The y axis  size  of  the  image  in  pixels.   The
              default is 256 pixels.

       ‐z(dz) The  image  depth in bytes.  The default is 2 bytes
              (unsigned shorts).

       ‐f(start)
              This specifies the slice number for the first image
              in the volume.  Default:1.

       ‐l(end)
              This  specifies the slice number for the last image
              in the volume.  Default:15.

       ‐i(step)
              This specifies the increment number to go from  one
              slice to the next.  Default:1.

       ‐b     This  specifies  that  16bit  images should be byte
              swapped before using.

       ‐v     This enables verbose mode.

       ‐s     This enables a set of 3D filters which are  applied
              axis‐wise  in  a manner appropriate for the scaling
              for each axis.  When scaling along an axis is  mag­
              nifing,  the filter is applied post‐sampling.  When
              the scaling  along  the  axis  is  decimating,  the
              filter  is  applied  pre‐sampling.  The kernal is a
              242 linear filter.

       ‐c(x:y:z)
              This option selects the bottom,lower,left‐hand cor­
              ner  of the region to be written to the output vol­
              ume.  Units are in pixels/slices.  Default:  0:0:0.

       ‐r(x:y:z)
              This  option  selects the width,height and depth of
              the region to be  written  to  the  output  volume.
              Units  are in pixels/slices.  Default: dx:dy:slices
              (the whole volume is selected by default).

       ‐o(x:y:z)
              This option sets the size of the output  volume  in
              pixels/slices.  The region selected by ‐c and ‐r is
              scaled linearly in three dimensions (independantly)
              to  fill this volume.  Default: (values specifed by
              ‐r) (the selected region would be copied  verbatim,
              with no scaling).

       ‐Px(minpad:maxpad)
              This option selects padding to be added along the X
              axis outside of the output region.  Thus, the final
              output  X  axis size is the output region size (‐o)
              plus minpad (in the negative direction) and  maxpad
              (in  the positive direction).  This allows the out­
              put region to be placed anywhere  inside  a  larger
              buffer volume.  Default: 0:0 (no padding).

       ‐Py(minpad:maxpad)
              This option selects padding to be added along the Y
              axis outside of the output region.  Thus, the final
              output  Y  axis size is the output region size (‐o)
              plus minpad (in the negative direction) and  maxpad
              (in  the positive direction).  This allows the out­
              put region to be placed anywhere  inside  a  larger
              buffer volume.  Default: 0:0 (no padding).

       ‐Pz(minpad:maxpad)
              This option selects padding to be added along the Z
              axis outside of the output region.  Thus, the final
              output  Z  axis size is the output region size (‐o)
              plus minpad (in the negative direction) and  maxpad
              (in  the positive direction).  This allows the out­
              put region to be placed anywhere  inside  a  larger
              buffer volume.  Default: 0:0 (no padding).

       ‐Pv(value)
              This option selects the voxel value to be placed in
              any padded regions specified by  the  (‐Px,‐Py,‐Pz)
              padding options.  The default: 0.0


SSEEEE AALLSSOO
       tal_programs

NNOOTTEESS
       Currently,  the  filter  kernal  is a fixed size and FWHM.
       This should be changed to match the scaling operation.

       The selection origin and size are  currently  limitted  to
       integer  values.  Floating point values should be support­
       ted (especially for partial slice resampling).

OORRIIGGIINN
       Brainvox, Human Neuroanatomy and Neuroimaging Lab, Depart­
       ment of Neurology, University of Iowa



                                             tal_resize(Brainvox)
