/* Copyright 1995-2001 Roger P. Woods, M.D. */
/* Modified 5/11/01 */


/* findcoords6.cf
 *
 * This code fragment finds the coordinates x_i and y_i
 * and computes related first and second derivatives
 *
 * It is meant to be included by other .c files such as uvderivsN6.c	
 */


			{
				/*Calculate coordinates (i,j,k) of pixel r in standard file*/
				unsigned int i,j,k;
				{
					unsigned long int tempplane=x_dim2*y_dim2;
					unsigned long int tempremainder=r%tempplane;

					k=(unsigned int)r/tempplane;
					j=(unsigned int)tempremainder/x_dim2;
					i=(unsigned int)tempremainder%x_dim2;
				}
					
				/*Calculate coordinates (x_i,y_i) of corresponding pixel in reslice file*/
				/*Skip further computations if pixel is out of bounds*/
				{
					double x_i, y_i;
					
					x_i=i*e00+j*e10+e30;
					if (x_i<0 || x_i>x_max1) continue;


					y_i=i*e01+j*e11+e31;
					if (y_i<0 || y_i>y_max1) continue;

					
					/* Compute non-zero first derivatives */
					
					{
						

						/*
						 * Note that dx[0], dx[1], dx[2]
						 * are equal to dy[3], dy[4], dy[5], respectively
						 *
						 * Consequently, these are all treated as
						 * dxy[0], dxy[1], and dxy[2]
						 *
						 */
						 
						double *dxyptr=dxy;
						
						*dxyptr++=(double)i;
						*dxyptr++=(double)j;
						*dxyptr=1.0;


					}
					
					/* Second derivatives are all zero */

					/*Get the coordinates of the 8 voxels surrounding the designated pixel*/
					/* in the reslice file*/
					{
						unsigned int x_up=(unsigned int)ceil(x_i);
						unsigned int x_down=(unsigned int)floor(x_i);
						unsigned int y_up=(unsigned int)ceil(y_i);
						unsigned int y_down=(unsigned int)floor(y_i);
						
						if(x_up==x_down){
							if(x_up<(unsigned int)x_max1) x_up++;
							else x_down--;
						}
						a=x_i-x_down;
						d=x_up-x_i;
						
						if(y_up==y_down){
							if(y_up<(unsigned int)y_max1) y_up++;
							else y_down--;
						}
						b=y_i-y_down;
						e=y_up-y_i;

						/*Get the values of these 4 voxels*/

						n0=(int)pixel2[k][y_down][x_down];
						n1=(int)pixel2[k][y_down][x_up];
						n2=(int)pixel2[k][y_up][x_down];
						n3=(int)pixel2[k][y_up][x_up];
					}
				}
			}
